spring.cloud.vault.enabled=true

spring.config.import=vault://
spring.cloud.vault.fail-fast=true
spring.cloud.vault.uri=http://localhost:8288
spring.cloud.vault.kv.default-context=
spring.cloud.vault.kv.profiles=

spring.cloud.vault.authentication=APPROLE

# role-id boleh dihardcode, boleh juga disediakan di environment variable
# SPRING_CLOUD_VAULT_APPROLE_ROLEID='bcad7c7a-65c7-efc1-84d1-c69d257cc219'
spring.cloud.vault.app-role.role-id=bcad7c7a-65c7-efc1-84d1-c69d257cc219

# secret-id sebaiknya tidak dihardcode, tapi disediakan di env variable
# SPRING_CLOUD_VAULT_APPROLE_SECRETID='87af52b1-80ba-d36b-3620-d66f6d012278'
# spring.cloud.vault.app-role.secret-id=edd74dbe-136e-4aff-2127-3819a0a163da

# bila menggunakan response-wrapped secret-id, kita berikan token untuk unwrapnya
# ini sebaiknya tidak dihardcode, tapi disediakan di environment variable
# SPRING_CLOUD_VAULT_TOKEN='hvs.CAESIMtw5LeWQ6KZNkMyTQk_PZOKk_uybl2dFqrK_dpYj0goGh4KHGh2cy5TdE1XVUZrQ1hHcXBZOUo4TTVIM3Rkc1c'
# spring.cloud.vault.token=hvs.CAESIKqolfvvKsN0p_BR2pUIoWzQ3jFsRaA5oHzk9xSRL3ZeGh4KHGh2cy44djl1UnNjRnlPbVd2Q1JKcjNIcExEWmE
